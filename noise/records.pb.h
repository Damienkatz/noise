// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: records.proto

#ifndef PROTOBUF_records_2eproto__INCLUDED
#define PROTOBUF_records_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace records {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_records_2eproto();
void protobuf_AssignDesc_records_2eproto();
void protobuf_ShutdownFile_records_2eproto();

class header;
class payload;
class payload_arrayoffsets_to_wordinfo;
class payload_arrayoffsets_to_wordinfo_wordinfo;

// ===================================================================

class header : public ::google::protobuf::Message {
 public:
  header();
  virtual ~header();

  header(const header& from);

  inline header& operator=(const header& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const header& default_instance();

  void Swap(header* other);

  // implements Message ----------------------------------------------

  header* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const header& from);
  void MergeFrom(const header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // required uint64 high_seq = 2;
  inline bool has_high_seq() const;
  inline void clear_high_seq();
  static const int kHighSeqFieldNumber = 2;
  inline ::google::protobuf::uint64 high_seq() const;
  inline void set_high_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:records.header)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_high_seq();
  inline void clear_has_high_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint64 high_seq_;
  friend void  protobuf_AddDesc_records_2eproto();
  friend void protobuf_AssignDesc_records_2eproto();
  friend void protobuf_ShutdownFile_records_2eproto();

  void InitAsDefaultInstance();
  static header* default_instance_;
};
// -------------------------------------------------------------------

class payload_arrayoffsets_to_wordinfo_wordinfo : public ::google::protobuf::Message {
 public:
  payload_arrayoffsets_to_wordinfo_wordinfo();
  virtual ~payload_arrayoffsets_to_wordinfo_wordinfo();

  payload_arrayoffsets_to_wordinfo_wordinfo(const payload_arrayoffsets_to_wordinfo_wordinfo& from);

  inline payload_arrayoffsets_to_wordinfo_wordinfo& operator=(const payload_arrayoffsets_to_wordinfo_wordinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const payload_arrayoffsets_to_wordinfo_wordinfo& default_instance();

  void Swap(payload_arrayoffsets_to_wordinfo_wordinfo* other);

  // implements Message ----------------------------------------------

  payload_arrayoffsets_to_wordinfo_wordinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const payload_arrayoffsets_to_wordinfo_wordinfo& from);
  void MergeFrom(const payload_arrayoffsets_to_wordinfo_wordinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 stemmedOffset = 1;
  inline bool has_stemmedoffset() const;
  inline void clear_stemmedoffset();
  static const int kStemmedOffsetFieldNumber = 1;
  inline ::google::protobuf::uint64 stemmedoffset() const;
  inline void set_stemmedoffset(::google::protobuf::uint64 value);

  // required int64 suffixOffset = 2;
  inline bool has_suffixoffset() const;
  inline void clear_suffixoffset();
  static const int kSuffixOffsetFieldNumber = 2;
  inline ::google::protobuf::int64 suffixoffset() const;
  inline void set_suffixoffset(::google::protobuf::int64 value);

  // required string suffixText = 3;
  inline bool has_suffixtext() const;
  inline void clear_suffixtext();
  static const int kSuffixTextFieldNumber = 3;
  inline const ::std::string& suffixtext() const;
  inline void set_suffixtext(const ::std::string& value);
  inline void set_suffixtext(const char* value);
  inline void set_suffixtext(const char* value, size_t size);
  inline ::std::string* mutable_suffixtext();
  inline ::std::string* release_suffixtext();
  inline void set_allocated_suffixtext(::std::string* suffixtext);

  // @@protoc_insertion_point(class_scope:records.payload.arrayoffsets_to_wordinfo.wordinfo)
 private:
  inline void set_has_stemmedoffset();
  inline void clear_has_stemmedoffset();
  inline void set_has_suffixoffset();
  inline void clear_has_suffixoffset();
  inline void set_has_suffixtext();
  inline void clear_has_suffixtext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 stemmedoffset_;
  ::google::protobuf::int64 suffixoffset_;
  ::std::string* suffixtext_;
  friend void  protobuf_AddDesc_records_2eproto();
  friend void protobuf_AssignDesc_records_2eproto();
  friend void protobuf_ShutdownFile_records_2eproto();

  void InitAsDefaultInstance();
  static payload_arrayoffsets_to_wordinfo_wordinfo* default_instance_;
};
// -------------------------------------------------------------------

class payload_arrayoffsets_to_wordinfo : public ::google::protobuf::Message {
 public:
  payload_arrayoffsets_to_wordinfo();
  virtual ~payload_arrayoffsets_to_wordinfo();

  payload_arrayoffsets_to_wordinfo(const payload_arrayoffsets_to_wordinfo& from);

  inline payload_arrayoffsets_to_wordinfo& operator=(const payload_arrayoffsets_to_wordinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const payload_arrayoffsets_to_wordinfo& default_instance();

  void Swap(payload_arrayoffsets_to_wordinfo* other);

  // implements Message ----------------------------------------------

  payload_arrayoffsets_to_wordinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const payload_arrayoffsets_to_wordinfo& from);
  void MergeFrom(const payload_arrayoffsets_to_wordinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef payload_arrayoffsets_to_wordinfo_wordinfo wordinfo;

  // accessors -------------------------------------------------------

  // repeated uint64 arrayoffsets = 1;
  inline int arrayoffsets_size() const;
  inline void clear_arrayoffsets();
  static const int kArrayoffsetsFieldNumber = 1;
  inline ::google::protobuf::uint64 arrayoffsets(int index) const;
  inline void set_arrayoffsets(int index, ::google::protobuf::uint64 value);
  inline void add_arrayoffsets(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      arrayoffsets() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_arrayoffsets();

  // repeated .records.payload.arrayoffsets_to_wordinfo.wordinfo wordinfos = 2;
  inline int wordinfos_size() const;
  inline void clear_wordinfos();
  static const int kWordinfosFieldNumber = 2;
  inline const ::records::payload_arrayoffsets_to_wordinfo_wordinfo& wordinfos(int index) const;
  inline ::records::payload_arrayoffsets_to_wordinfo_wordinfo* mutable_wordinfos(int index);
  inline ::records::payload_arrayoffsets_to_wordinfo_wordinfo* add_wordinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo_wordinfo >&
      wordinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo_wordinfo >*
      mutable_wordinfos();

  // @@protoc_insertion_point(class_scope:records.payload.arrayoffsets_to_wordinfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > arrayoffsets_;
  ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo_wordinfo > wordinfos_;
  friend void  protobuf_AddDesc_records_2eproto();
  friend void protobuf_AssignDesc_records_2eproto();
  friend void protobuf_ShutdownFile_records_2eproto();

  void InitAsDefaultInstance();
  static payload_arrayoffsets_to_wordinfo* default_instance_;
};
// -------------------------------------------------------------------

class payload : public ::google::protobuf::Message {
 public:
  payload();
  virtual ~payload();

  payload(const payload& from);

  inline payload& operator=(const payload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const payload& default_instance();

  void Swap(payload* other);

  // implements Message ----------------------------------------------

  payload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const payload& from);
  void MergeFrom(const payload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef payload_arrayoffsets_to_wordinfo arrayoffsets_to_wordinfo;

  // accessors -------------------------------------------------------

  // repeated .records.payload.arrayoffsets_to_wordinfo arrayoffsets_to_wordinfos = 1;
  inline int arrayoffsets_to_wordinfos_size() const;
  inline void clear_arrayoffsets_to_wordinfos();
  static const int kArrayoffsetsToWordinfosFieldNumber = 1;
  inline const ::records::payload_arrayoffsets_to_wordinfo& arrayoffsets_to_wordinfos(int index) const;
  inline ::records::payload_arrayoffsets_to_wordinfo* mutable_arrayoffsets_to_wordinfos(int index);
  inline ::records::payload_arrayoffsets_to_wordinfo* add_arrayoffsets_to_wordinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo >&
      arrayoffsets_to_wordinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo >*
      mutable_arrayoffsets_to_wordinfos();

  // @@protoc_insertion_point(class_scope:records.payload)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo > arrayoffsets_to_wordinfos_;
  friend void  protobuf_AddDesc_records_2eproto();
  friend void protobuf_AssignDesc_records_2eproto();
  friend void protobuf_ShutdownFile_records_2eproto();

  void InitAsDefaultInstance();
  static payload* default_instance_;
};
// ===================================================================


// ===================================================================

// header

// required uint64 version = 1;
inline bool header::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void header::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void header::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void header::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 header::version() const {
  // @@protoc_insertion_point(field_get:records.header.version)
  return version_;
}
inline void header::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:records.header.version)
}

// required uint64 high_seq = 2;
inline bool header::has_high_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void header::set_has_high_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void header::clear_has_high_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void header::clear_high_seq() {
  high_seq_ = GOOGLE_ULONGLONG(0);
  clear_has_high_seq();
}
inline ::google::protobuf::uint64 header::high_seq() const {
  // @@protoc_insertion_point(field_get:records.header.high_seq)
  return high_seq_;
}
inline void header::set_high_seq(::google::protobuf::uint64 value) {
  set_has_high_seq();
  high_seq_ = value;
  // @@protoc_insertion_point(field_set:records.header.high_seq)
}

// -------------------------------------------------------------------

// payload_arrayoffsets_to_wordinfo_wordinfo

// required uint64 stemmedOffset = 1;
inline bool payload_arrayoffsets_to_wordinfo_wordinfo::has_stemmedoffset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_has_stemmedoffset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::clear_has_stemmedoffset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::clear_stemmedoffset() {
  stemmedoffset_ = GOOGLE_ULONGLONG(0);
  clear_has_stemmedoffset();
}
inline ::google::protobuf::uint64 payload_arrayoffsets_to_wordinfo_wordinfo::stemmedoffset() const {
  // @@protoc_insertion_point(field_get:records.payload.arrayoffsets_to_wordinfo.wordinfo.stemmedOffset)
  return stemmedoffset_;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_stemmedoffset(::google::protobuf::uint64 value) {
  set_has_stemmedoffset();
  stemmedoffset_ = value;
  // @@protoc_insertion_point(field_set:records.payload.arrayoffsets_to_wordinfo.wordinfo.stemmedOffset)
}

// required int64 suffixOffset = 2;
inline bool payload_arrayoffsets_to_wordinfo_wordinfo::has_suffixoffset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_has_suffixoffset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::clear_has_suffixoffset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::clear_suffixoffset() {
  suffixoffset_ = GOOGLE_LONGLONG(0);
  clear_has_suffixoffset();
}
inline ::google::protobuf::int64 payload_arrayoffsets_to_wordinfo_wordinfo::suffixoffset() const {
  // @@protoc_insertion_point(field_get:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixOffset)
  return suffixoffset_;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_suffixoffset(::google::protobuf::int64 value) {
  set_has_suffixoffset();
  suffixoffset_ = value;
  // @@protoc_insertion_point(field_set:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixOffset)
}

// required string suffixText = 3;
inline bool payload_arrayoffsets_to_wordinfo_wordinfo::has_suffixtext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_has_suffixtext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::clear_has_suffixtext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::clear_suffixtext() {
  if (suffixtext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suffixtext_->clear();
  }
  clear_has_suffixtext();
}
inline const ::std::string& payload_arrayoffsets_to_wordinfo_wordinfo::suffixtext() const {
  // @@protoc_insertion_point(field_get:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixText)
  return *suffixtext_;
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_suffixtext(const ::std::string& value) {
  set_has_suffixtext();
  if (suffixtext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suffixtext_ = new ::std::string;
  }
  suffixtext_->assign(value);
  // @@protoc_insertion_point(field_set:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixText)
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_suffixtext(const char* value) {
  set_has_suffixtext();
  if (suffixtext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suffixtext_ = new ::std::string;
  }
  suffixtext_->assign(value);
  // @@protoc_insertion_point(field_set_char:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixText)
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_suffixtext(const char* value, size_t size) {
  set_has_suffixtext();
  if (suffixtext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suffixtext_ = new ::std::string;
  }
  suffixtext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixText)
}
inline ::std::string* payload_arrayoffsets_to_wordinfo_wordinfo::mutable_suffixtext() {
  set_has_suffixtext();
  if (suffixtext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suffixtext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixText)
  return suffixtext_;
}
inline ::std::string* payload_arrayoffsets_to_wordinfo_wordinfo::release_suffixtext() {
  clear_has_suffixtext();
  if (suffixtext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = suffixtext_;
    suffixtext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void payload_arrayoffsets_to_wordinfo_wordinfo::set_allocated_suffixtext(::std::string* suffixtext) {
  if (suffixtext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suffixtext_;
  }
  if (suffixtext) {
    set_has_suffixtext();
    suffixtext_ = suffixtext;
  } else {
    clear_has_suffixtext();
    suffixtext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:records.payload.arrayoffsets_to_wordinfo.wordinfo.suffixText)
}

// -------------------------------------------------------------------

// payload_arrayoffsets_to_wordinfo

// repeated uint64 arrayoffsets = 1;
inline int payload_arrayoffsets_to_wordinfo::arrayoffsets_size() const {
  return arrayoffsets_.size();
}
inline void payload_arrayoffsets_to_wordinfo::clear_arrayoffsets() {
  arrayoffsets_.Clear();
}
inline ::google::protobuf::uint64 payload_arrayoffsets_to_wordinfo::arrayoffsets(int index) const {
  // @@protoc_insertion_point(field_get:records.payload.arrayoffsets_to_wordinfo.arrayoffsets)
  return arrayoffsets_.Get(index);
}
inline void payload_arrayoffsets_to_wordinfo::set_arrayoffsets(int index, ::google::protobuf::uint64 value) {
  arrayoffsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:records.payload.arrayoffsets_to_wordinfo.arrayoffsets)
}
inline void payload_arrayoffsets_to_wordinfo::add_arrayoffsets(::google::protobuf::uint64 value) {
  arrayoffsets_.Add(value);
  // @@protoc_insertion_point(field_add:records.payload.arrayoffsets_to_wordinfo.arrayoffsets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
payload_arrayoffsets_to_wordinfo::arrayoffsets() const {
  // @@protoc_insertion_point(field_list:records.payload.arrayoffsets_to_wordinfo.arrayoffsets)
  return arrayoffsets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
payload_arrayoffsets_to_wordinfo::mutable_arrayoffsets() {
  // @@protoc_insertion_point(field_mutable_list:records.payload.arrayoffsets_to_wordinfo.arrayoffsets)
  return &arrayoffsets_;
}

// repeated .records.payload.arrayoffsets_to_wordinfo.wordinfo wordinfos = 2;
inline int payload_arrayoffsets_to_wordinfo::wordinfos_size() const {
  return wordinfos_.size();
}
inline void payload_arrayoffsets_to_wordinfo::clear_wordinfos() {
  wordinfos_.Clear();
}
inline const ::records::payload_arrayoffsets_to_wordinfo_wordinfo& payload_arrayoffsets_to_wordinfo::wordinfos(int index) const {
  // @@protoc_insertion_point(field_get:records.payload.arrayoffsets_to_wordinfo.wordinfos)
  return wordinfos_.Get(index);
}
inline ::records::payload_arrayoffsets_to_wordinfo_wordinfo* payload_arrayoffsets_to_wordinfo::mutable_wordinfos(int index) {
  // @@protoc_insertion_point(field_mutable:records.payload.arrayoffsets_to_wordinfo.wordinfos)
  return wordinfos_.Mutable(index);
}
inline ::records::payload_arrayoffsets_to_wordinfo_wordinfo* payload_arrayoffsets_to_wordinfo::add_wordinfos() {
  // @@protoc_insertion_point(field_add:records.payload.arrayoffsets_to_wordinfo.wordinfos)
  return wordinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo_wordinfo >&
payload_arrayoffsets_to_wordinfo::wordinfos() const {
  // @@protoc_insertion_point(field_list:records.payload.arrayoffsets_to_wordinfo.wordinfos)
  return wordinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo_wordinfo >*
payload_arrayoffsets_to_wordinfo::mutable_wordinfos() {
  // @@protoc_insertion_point(field_mutable_list:records.payload.arrayoffsets_to_wordinfo.wordinfos)
  return &wordinfos_;
}

// -------------------------------------------------------------------

// payload

// repeated .records.payload.arrayoffsets_to_wordinfo arrayoffsets_to_wordinfos = 1;
inline int payload::arrayoffsets_to_wordinfos_size() const {
  return arrayoffsets_to_wordinfos_.size();
}
inline void payload::clear_arrayoffsets_to_wordinfos() {
  arrayoffsets_to_wordinfos_.Clear();
}
inline const ::records::payload_arrayoffsets_to_wordinfo& payload::arrayoffsets_to_wordinfos(int index) const {
  // @@protoc_insertion_point(field_get:records.payload.arrayoffsets_to_wordinfos)
  return arrayoffsets_to_wordinfos_.Get(index);
}
inline ::records::payload_arrayoffsets_to_wordinfo* payload::mutable_arrayoffsets_to_wordinfos(int index) {
  // @@protoc_insertion_point(field_mutable:records.payload.arrayoffsets_to_wordinfos)
  return arrayoffsets_to_wordinfos_.Mutable(index);
}
inline ::records::payload_arrayoffsets_to_wordinfo* payload::add_arrayoffsets_to_wordinfos() {
  // @@protoc_insertion_point(field_add:records.payload.arrayoffsets_to_wordinfos)
  return arrayoffsets_to_wordinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo >&
payload::arrayoffsets_to_wordinfos() const {
  // @@protoc_insertion_point(field_list:records.payload.arrayoffsets_to_wordinfos)
  return arrayoffsets_to_wordinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::records::payload_arrayoffsets_to_wordinfo >*
payload::mutable_arrayoffsets_to_wordinfos() {
  // @@protoc_insertion_point(field_mutable_list:records.payload.arrayoffsets_to_wordinfos)
  return &arrayoffsets_to_wordinfos_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace records

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_records_2eproto__INCLUDED
